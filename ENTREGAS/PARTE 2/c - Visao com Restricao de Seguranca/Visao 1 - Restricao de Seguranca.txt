/* VIEW - RESTRICAO DE SEGURANCA
* Esta visao servira para uma listagem de funcionarios da empresa no sistema, por conta disso, tem a necessidade de ocultar dados sensiveis,
* como por exemplo salario, e outros dados Ãºnicos(como ID), que poderiam dar acesso a outros dados, por meio de juncoes, como por exemplo a 
* lista de dependentes. */

CREATE VIEW Infos_employee AS (
	SELECT A.name_employee, B.name_knowledge, A.name_team 
	FROM (SELECT E.idt_level_knowledge, E.name_employee, T.name_team, T.idt_team 
			FROM Employee as E
			INNER JOIN Team as T ON E.idt_team = T.idt_team ) as A 
			INNER JOIN level_knowledge as B ON A.idt_level_knowledge  = B.idt_knowledge 
	ORDER BY A.name_team,  B.idt_knowledge
);

/* DISCUSSAO SOBRE A RELACAO CUSTO/BENEFICIO */

/*	Por ser uma query muito requisitada, ao passo que retorna as informacoes necessarias para "encontrar" um empregado na empresa, retornando 
* o nome, o nivel de conhecimento e o time em que um funcionario se encontra atualmente apenas fazendo um select na view requisitando tais informacoes
* ja que nela ja esta presente todas as juncoes necessarias. Tambem eh possivel notar que ocultamos dados sensiveis como o salario e o identificador
* do funcionario, proporcionando uma funcionalidade de seguranca. Nesse caso, para cumprir com seu objetivo, nao ha a necessidade de realizar atualizacoes
* por meio desta view. */



