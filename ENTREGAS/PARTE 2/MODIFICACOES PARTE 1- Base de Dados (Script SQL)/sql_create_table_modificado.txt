  
CREATE TABLE Level_Knowledge (
	idt_knowledge INT IDENTITY(1,1) PRIMARY KEY,
	name_knowledge VARCHAR
);

CREATE TABLE Employee (
	idt_employee INT IDENTITY(1,1) PRIMARY KEY,
	name_employee VARCHAR,
	date_admission DATE,
	salary DECIMAL,
	idt_level_knowledge INTEGER,
	idt_department INTEGER,
	idt_team INTEGER
);

CREATE TABLE Employee_History (
	idt_employee_history INT IDENTITY(1,1) PRIMARY KEY,
	date_update DATE,
	salary_update DECIMAL,
	level_knowledge_udpdate VARCHAR,
	idt_employee INTEGER 
);

CREATE TABLE Dependent (
	idt_dependent INT IDENTITY(1,1) PRIMARY KEY,
	name_dependent VARCHAR,
	idt_employee INTEGER
);

CREATE TABLE Director (
	area VARCHAR,
	fk_Employee_idt_employee INT IDENTITY(1,1) PRIMARY KEY
);

CREATE TABLE Manager (
	fk_Employee_idt_employee INT IDENTITY(1,1) PRIMARY KEY
);

CREATE TABLE Especialist (
	area_knowledge VARCHAR,
	fk_Employee_idt_employee INT IDENTITY(1,1) PRIMARY KEY
);

CREATE TABLE Analyst (
	fk_Employee_idt_employee INT IDENTITY(1,1) PRIMARY KEY
);

CREATE TABLE Team (
	idt_team INT IDENTITY(1,1) PRIMARY KEY,
	name_team VARCHAR,
	idt_project INTEGER
);

CREATE TABLE Project(
	idt_project INT IDENTITY(1,1) PRIMARY KEY,
	name_project VARCHAR,
	date_create DATE,
	date_final DATE
);

CREATE TABLE Sale (
	idt_sale INT IDENTITY(1,1) PRIMARY KEY,
	date_sale DATE,
	amount_sale_project DECIMAL(19,2), -- Adequacao do data type para entrar em concordancia com o modelo. Tipo anterior: INTEGER.
	idt_project INTEGER
);

CREATE TABLE Sale_History (
	idt_sale_history INT IDENTITY(1,1) PRIMARY KEY,
	date_update_sale DATE,
	cost_sale_update DECIMAL,
	idt_sale INTEGER,
	idt_project INTEGER
);

CREATE TABLE Financial_Control (
	idt_financial_control INT IDENTITY(1,1) PRIMARY KEY,
	total_cost_sale DECIMAL(19,2), -- Adequacao do data type para entrar em concordancia com o modelo. Tipo anterior: INTEGER.,
	idt_sale INTEGER
);

CREATE TABLE Department (
	idt_department INT IDENTITY(1,1) PRIMARY KEY,
	name_department VARCHAR
);

CREATE TABLE Department_Management (
	idt_dpt_management INT IDENTITY(1,1) PRIMARY KEY,
	idt_employee INTEGER,
	idt_department INTEGER
);

ALTER TABLE Employee ADD CONSTRAINT FK_Employee_2
FOREIGN KEY (idt_level_knowledge)
REFERENCES Level_Knowledge (idt_knowledge)
ON DELETE RESTRICT;

ALTER TABLE Employee ADD CONSTRAINT FK_Employee_3
FOREIGN KEY (idt_department)
REFERENCES Department;

/* Essa FK foi retirada pois na parte 2 do trabalho foi criada uma trigger que uma satisfaz o objetivo utilizando somente a PK*/
--ALTER TABLE Employee_History ADD CONSTRAINT FK_Employee_History_2
--FOREIGN KEY (idt_employee)
--REFERENCES Employee;

ALTER TABLE Dependent ADD CONSTRAINT FK_Dependent_2
FOREIGN KEY (idt_employee)
REFERENCES Employee ON DELETE CASCADE;

ALTER TABLE Director ADD CONSTRAINT FK_Director_2
FOREIGN KEY (fk_Employee_idt_employee)
REFERENCES Employee (idt_employee)
ON DELETE CASCADE;

ALTER TABLE Manager ADD CONSTRAINT FK_Manager_2
FOREIGN KEY (fk_Employee_idt_employee)
REFERENCES Employee (idt_employee)
ON DELETE CASCADE;

ALTER TABLE Especialist ADD CONSTRAINT FK_Especialist_2
FOREIGN KEY (fk_Employee_idt_employee)
REFERENCES Employee (idt_employee)
ON DELETE CASCADE;

ALTER TABLE Analyst ADD CONSTRAINT FK_Analyst_2
FOREIGN KEY (fk_Employee_idt_employee)
REFERENCES Employee (idt_employee)
ON DELETE CASCADE;

ALTER TABLE Sale ADD CONSTRAINT FK_Sale_2
FOREIGN KEY (idt_project)
REFERENCES Project;

ALTER TABLE Sale_History ADD CONSTRAINT FK_Sale_History_2
FOREIGN KEY (idt_sale)
REFERENCES Sale;

ALTER TABLE Sale_History ADD CONSTRAINT FK_Sale_History_1
FOREIGN KEY (idt_project)
REFERENCES Project;

ALTER TABLE Financial_Control ADD CONSTRAINT FK_Financial_Control_2
FOREIGN KEY (idt_sale)
REFERENCES Sale;

ALTER TABLE Department_Management ADD CONSTRAINT FK_department_Management_2
FOREIGN KEY (idt_department)
REFERENCES Department;

ALTER TABLE Team ADD CONSTRAINT FK_project
FOREIGN KEY (idt_project)
REFERENCES Project;

ALTER TABLE Department_Management ADD CONSTRAINT FK_Employee_2
FOREIGN KEY (idt_employee)
REFERENCES Employee;